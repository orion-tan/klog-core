services:
  klog-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: klog-backend
    ports:
      - "8010:8010"
    volumes:
      - ./db:/app/db
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./configs:/app/configs
    environment:
      - GIN_MODE=release
    restart: unless-stopped
    networks:
      - klog-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8010/api/v1/categories"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

  # 可选：使用MySQL数据库
  # mysql:
  #   image: mysql:8.0
  #   container_name: klog-mysql
  #   environment:
  #     MYSQL_ROOT_PASSWORD: rootpassword
  #     MYSQL_DATABASE: klog
  #     MYSQL_USER: klog
  #     MYSQL_PASSWORD: klogpassword
  #   ports:
  #     - "3306:3306"
  #   volumes:
  #     - mysql-data:/var/lib/mysql
  #   networks:
  #     - klog-network
  #   restart: unless-stopped

  # 可选：Nginx反向代理
  # nginx:
  #   image: nginx:alpine
  #   container_name: klog-nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./uploads:/usr/share/nginx/html/uploads:ro
  #     - ./nginx/ssl:/etc/nginx/ssl:ro
  #   depends_on:
  #     - klog-backend
  #   networks:
  #     - klog-network
  #   restart: unless-stopped

networks:
  klog-network:
    driver: bridge

# volumes:
#   mysql-data:

